@ResponseBody 用于方法上 ,标记Controller的方法返回的对象,通常返回JSON数据的情况比较多

@Controller 与 @RestController  用于类上

@Controller注解 是返回一个界面的操作 即是jsp 

@RestController 是返回对象,以json或xml形式写入http响应Response中

@RestController 也等于 @Controller 与 @ResponseBody 的组合


@RequestMapping 用于类与方法上 ,用于映射url到控制器类上.标记该类所有的请求都以该地址作为父路径 


例子:

	//请求路径 http://127.0.0.1/xx/xx/deviceInfo/recordDeviceInfo
	@Controller
	@RequestMapping("/deviceInfo")
	public class DeviceInfoController  {

		@RequestMapping(value = "/recordDeviceInfo", headers = "Accept=text/json")
		@ResponseBody
		public String recordDeviceInfo(HttpServletRequest request, HttpServletResponse response) {
			return ""
		}
	}

@PathVariable  Restful风格的提交方式  @PathVariable用于显示地将url映射参数到方法参数

例子:


	//请求路径 http://127.0.0.1/xx/xx/app/index/get/sessionKey/timestamp/
	@RestController("appIndexController")
	@RequestMapping("/app/index")
	public class IndexController {

		@PostMapping ("/get/{sessionKey}/{timestamp}")
		public Object getIndex(@PathVariable("sessionKey") String sessionKey, @PathVariable("timestamp") String timestamp) {
				return ""
			}
	}

@Service  标记服务层注解与 @Controller @RestController 控制层 利用 @Autowired 对@Server的引用.



@Qualifier 如果多个相同类型的bean则根据此注解来处理注入不同bean[否则报错NoUniqueBeanDefinitionException]



@Autowired  标记需要按类型注入的bean 默认根据byType自动装配  

@Resource  标记需要按类型注入的bean 默认根据byName自动装配 


@Autowired 与 @Resource 的区别

1.包含属性不同

2.Autowired 默认按byType自动装配  Resource 默认按byName自动装配

3.注解应用不同  Autowired 用于 类 方法 成员变量 构造器 参数   Resource 用于 类 方法 成员变量

4.出处不同 Autowired  是跟spring框架强耦合  Resource 是JSR-250提供的 是java标准 绝大部分框架都支持.

5.装配顺序不同 

1.@Autowired -> byType查找 -> 是否查找到 否 -> 报异常  
			   -> 是否查找到 是 -> 是否仅有一个bean -> 仅止一个 -> 自动装配
			   -> 是否查找到 是 -> 是否仅有一个bean -> 不止一个 -> 是否配置@Qualifier查找 是 -> 是否查找到 否 ->  报异常
			   -> 是否查找到 是 -> 是否仅有一个bean -> 不止一个 -> 是否配置@Qualifier查找 是 -> 是否查找到 是 ->  自动装配
			   -> 是否查找到 是 -> 是否仅有一个bean -> 不止一个 -> 是否配置@Qualifier查找 否 -> 按byName查找  ->  是否查找到 否 -> 报异常
			   -> 是否查找到 是 -> 是否仅有一个bean -> 不止一个 -> 是否配置@Qualifier查找 否 -> 按byName查找  ->  是否查找到 是 -> 自动装配

1.@Resource -> 同时指定 byType与byName查找 -> 查找Type与Name的唯一 -> 是否找到 否 -> 报异常 
								   -> 是否找到 是 -> 自动装配
								  
2.@Resource -> 根据 byType查找 -> 查找Type唯一 -> 是否找到 否 -> 报异常 
					       -> 是否找到 是 -> 自动装配 

3.@Resource -> 根据 byName查找 -> 查找Name唯一 -> 是否找到 否 -> 报异常 
					       -> 是否找到 是 -> 自动装配 		
					       




@Data 主要注入生成 getter setter equals hashCode  toString
@AllArgsConstructor 注解在类上 生成有参构造函数 
@NoArgsConstructor  注解在类上 生成无参构造函数



DTO  代表服务层需要接收数据和返回的数据
 
VO   代表表示层需要显示的数据



RestTemplate Http请求工具,利用于服务之间的调用




